# create keyspace and table for testdata
CREATE KEYSPACE test
  WITH REPLICATION = { 
   'class' : 'SimpleStrategy', 
   'replication_factor' : 1 
  };

CREATE TABLE test.testdata ( 
   charge int,
   clus int,
   dst int,
   hist int,
   enumber int,
   etime double, 
   rnumber int,
   nlb int,
   qxb float,
   tracks int,
   vertex float,
   zdc int,
   PRIMARY KEY (enumber)
   );  
   
# load data
COPY test.testdata (charge, clus, dst, hist, enumber, etime, rnumber, nlb, qxb, tracks, vertex, zdc) 
FROM '/var/lib/cassandra/xaa' WITH HEADER = FALSE ;

##################################
# script for copy to container 3x
# 1. CSV splitten
# 2. Kopieren in den richtigen Container (verteilen, vielleicht umbennen für einheitliches loadscript) oder zugriff auf geteiltes volume
# 3. Script ausführen und (falls nicht vorhanden) Tabellen erstellen

# split into number of cassandra instances
split -n 3 export_ilja_10.csv.gz "import_10_"


scp xab docker@192.168.99.101:/home/docker/
scp xac docker@192.168.99.102:/home/docker/

docker cp xaa $(docker ps | grep cassandra | awk '{print $1}'):/var/lib/cassandra
docker cp /home/docker/xab $(docker ps | grep cassandra | awk '{print $1}'):/var/lib/cassandra
docker cp /home/docker/xac $(docker ps | grep cassandra | awk '{print $1}'):/var/lib/cassandra

docker exec -ti $(docker ps | grep cassandra | awk '{print $1}') cqlsh -e "COPY test.testdata (charge, clus, dst, hist, enumber, etime, rnumber, nlb, qxb, tracks, vertex, zdc) 
FROM '/var/lib/cassandra/xaa' WITH HEADER = FALSE ;"

docker exec -ti $(docker ps | grep cassandra | awk '{print $1}') cqlsh -e "COPY test.testdata (charge, clus, dst, hist, enumber, etime, rnumber, nlb, qxb, tracks, vertex, zdc) 
FROM '/var/lib/cassandra/xab' WITH HEADER = FALSE ;"

docker exec -ti $(docker ps | grep cassandra | awk '{print $1}') cqlsh -e "COPY test.testdata (charge, clus, dst, hist, enumber, etime, rnumber, nlb, qxb, tracks, vertex, zdc) 
FROM '/var/lib/cassandra/xac' WITH HEADER = FALSE ;"

# script in containern bereitstellen
# volume mit testdaten einbinden
# triggern des starts?
